<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>An implementation of a secret sharing scheme.</title>
    <link>https://itslab-kyushu.github.io/sss/index.xml</link>
    <description>Recent content on An implementation of a secret sharing scheme.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Mar 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://itslab-kyushu.github.io/sss/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Local mode</title>
      <link>https://itslab-kyushu.github.io/sss/local/</link>
      <pubDate>Wed, 08 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://itslab-kyushu.github.io/sss/local/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/itslab-kyushu/sss/releases/tag/v0.3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-0.3.0-brightgreen.svg&#34; alt=&#34;Release&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Local mode of the client application provides two commands, distribute and
reconstruct.
Distribute command reads a given file and computes shares of
the &lt;em&gt;k&lt;/em&gt;-out-of-&lt;em&gt;n&lt;/em&gt; threshold secret sharing scheme.
It means totally &lt;em&gt;n&lt;/em&gt; shares will be made from a secret file,
and you must have at least &lt;em&gt;k&lt;/em&gt; shares to reconstruct the secret.
Reconstruct command does that phase, i.e. it reads at least &lt;em&gt;k&lt;/em&gt; share files and
reconstruct the secret file.&lt;/p&gt;

&lt;h2 id=&#34;distribute-command&#34;&gt;Distribute command&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sss local distribute &amp;lt;file&amp;gt; &amp;lt;number of shares&amp;gt; &amp;lt;threshold&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command reads a secret file &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; and makes share files.
Each share file will be compressed by xz,
and the file name of &lt;em&gt;i&lt;/em&gt;-th share has suffix &lt;code&gt;.i.xz&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You need to specify the number of shares this command totally makes by
&lt;code&gt;&amp;lt;number of shares&amp;gt;&lt;/code&gt;, and how many shares are required to reconstruct the secret
by &lt;code&gt;&amp;lt;threshold&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This command also takes an optional flag &lt;code&gt;--chunk&lt;/code&gt; to specify the byte size of
each chunk.
The given secret file is divided to chunks based on this size and distributed
in shares.&lt;/p&gt;

&lt;h2 id=&#34;reconstruct-command&#34;&gt;Reconstruct command&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sss local reconstruct &amp;lt;file&amp;gt;...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command reconstructs a secret from a list of share files.
It produces a file based on the given share&amp;rsquo;s file name by removing the above
suffix.
For example, if the names of share files are &lt;code&gt;sample.txt.1.xz&lt;/code&gt;,
&lt;code&gt;sample.txt.2.xz&lt;/code&gt;, &amp;hellip;, then the default file name of the reconstructed secret
will be &lt;code&gt;sample.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can use &lt;code&gt;--output&lt;/code&gt; flag to use another file name.&lt;/p&gt;

&lt;h2 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h2&gt;

&lt;p&gt;Suppose &lt;code&gt;secret.dat&lt;/code&gt; is a secret file and distributing it using 3-out-of-10
threshold secret sharing scheme.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sss local distribute secret.dat 10 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above command creates a set of secrets, &lt;code&gt;secret.dat.1.xz&lt;/code&gt;, &lt;code&gt;secret.dat.2.xz&lt;/code&gt;,
&amp;hellip;, &lt;code&gt;secret.dat.10.xz&lt;/code&gt;.
We can store each share file into a different storage in order to prevent
information leakage, and now we can delete the secret file &lt;code&gt;secret.dat&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To reconstruct the secret from shares, we must to collect at least 3 share
files. Suppose we have &lt;code&gt;secret.dat.1.xz&lt;/code&gt;, &lt;code&gt;secret.dat.2.xz&lt;/code&gt;, and
&lt;code&gt;secret.dat.5.xz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sss local reconstruct secret.dat.1.xz secret.dat.2.xz secret.dat.5.xz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above command reconstructs the secret and stores it as &lt;code&gt;secret.dat&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re a &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; user,
you can install the client application by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew tap itslab-kyushu/sss
$ brew install sss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compiled binaries for some platforms are available on
&lt;a href=&#34;https://github.com/itslab-kyushu/sss/releases&#34;&gt;Github&lt;/a&gt;.
To use these binaries, after downloading a binary to your environment, decompress and put it in a directory included in your $PATH.&lt;/p&gt;

&lt;p&gt;You can also compile the client application by yourself.
To compile it, you first download the code base:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/itslab-kyushu/sss $GOPATH/src/itslab-kyushu/sss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, build the client application &lt;code&gt;sss&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd $GOPATH/src/itslab-kyushu/sss/client
$ go get -d -t -v .
$ go build -o sss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To build the command, &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &amp;gt; 1.7.4 is required.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Remote mode</title>
      <link>https://itslab-kyushu.github.io/sss/remote/</link>
      <pubDate>Wed, 08 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://itslab-kyushu.github.io/sss/remote/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/itslab-kyushu/sss/releases/tag/v0.3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-0.3.0-brightgreen.svg&#34; alt=&#34;Release&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Remote mode of the client application provides an interface to a client/server
style data storage service.
This mode has four commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;get: download a set of shares and reconstruct a secret,&lt;/li&gt;
&lt;li&gt;put: creates a set of shares from a secret and upload each share to each
server,&lt;/li&gt;
&lt;li&gt;delete: delete shares associated with a given secret file,&lt;/li&gt;
&lt;li&gt;list: show names of secret files stored in the data storage service,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and all commands connect a set of &lt;a href=&#34;server&#34;&gt;data storage servers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To specify address information of those servers, all commands receives a
configuration file in YAML.
The configuration file has one root element &lt;code&gt;servers&lt;/code&gt; and it takes a list of
server information, which is an object consisting of two element &lt;code&gt;address&lt;/code&gt; and
&lt;code&gt;port&lt;/code&gt;.
The following example defines three servers in a same network:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;servers:
  - address: 192.168.0.1
    port: 13009
  - address: 192.168.0.2
    port: 13009
  - address: 192.168.1.1
    port: 13009
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The default name of the configuration file is &lt;code&gt;sss.yml&lt;/code&gt; but you can set another
name via &lt;code&gt;--config&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;The get command gathers shares from the servers defined the configuration file,
and put command distributes shares to the servers.&lt;/p&gt;

&lt;h2 id=&#34;get-command&#34;&gt;Get command&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sss remote get --config sss.yml --output result.dat &amp;lt;file name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get command gathers shares associated with the given file name from the servers
defined in the configuration file, and then reconstructs and stores them as
the given file name via &lt;code&gt;--output&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;The number of servers defined in the configuration file must be greater then or
equal to the threshold which is used to put the secret file.&lt;/p&gt;

&lt;p&gt;This command downloads shares from the servers defined the configuration file,
even if the number of necessary shares is smaller than the number of the servers
defined in the configuration file.
In other words, it is not good to use the same configuration file when you used
in &lt;code&gt;put&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;--config&lt;/code&gt; flag is omitted, &lt;code&gt;sss.yml&lt;/code&gt; is used, and if &lt;code&gt;--output&lt;/code&gt; flag is
omitted, &lt;code&gt;&amp;lt;file name&amp;gt;&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;To find available file names, use list command.&lt;/p&gt;

&lt;h2 id=&#34;put-command&#34;&gt;Put command&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sss remote put --config sss.yml &amp;lt;file&amp;gt; &amp;lt;threshold&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Put command reads the given file and runs distribute procedure to create shares.
The number of total shares are as same as defined in the server configuration
file.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;--config&lt;/code&gt; flag is omitted, &lt;code&gt;sss.yml&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;Put command also takes &lt;code&gt;--chunk&lt;/code&gt; flag to set the byte size of each chunk.
The default value is 256.
The distribute procedure creates a finite filed Z/pZ, where p is a prime number
which has chunk size + 1 bit length.&lt;/p&gt;

&lt;h2 id=&#34;delete-command&#34;&gt;Delete command&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sss remote delete --config sss.yml &amp;lt;file name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete command deletes all shares associated with the given file name from all
servers defined in the configuration file.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;--config&lt;/code&gt; flag is omitted, &lt;code&gt;sss.yml&lt;/code&gt; is used.&lt;/p&gt;

&lt;h2 id=&#34;list-command&#34;&gt;List command&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sss remote list --config sss.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List command shows all file names stored in the servers.
If &lt;code&gt;--config&lt;/code&gt; flag is omitted, &lt;code&gt;sss.yml&lt;/code&gt; is used.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re a &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; user,
you can install the client application by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew tap itslab-kyushu/sss
$ brew install sss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compiled binaries for some platforms are available on
&lt;a href=&#34;https://github.com/itslab-kyushu/sss/releases&#34;&gt;Github&lt;/a&gt;.
To use these binaries, after downloading a binary to your environment, decompress and put it in a directory included in your $PATH.&lt;/p&gt;

&lt;p&gt;You can also compile the client application by yourself.
To compile it, you first download the code base:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/itslab-kyushu/sss $GOPATH/src/itslab-kyushu/sss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, build the client application &lt;code&gt;sss&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd $GOPATH/src/itslab-kyushu/sss/client
$ go get -d -t -v .
$ go build -o sss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To build the command, &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &amp;gt; 1.7.4 is required.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Server application</title>
      <link>https://itslab-kyushu.github.io/sss/server/</link>
      <pubDate>Wed, 08 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://itslab-kyushu.github.io/sss/server/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/itslab-kyushu/sss/releases/tag/v0.3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-0.3.0-brightgreen.svg&#34; alt=&#34;Release&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://hub.docker.com/r/itslabq/sss/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dockerhub-itslabq%2Fsss-blue.svg&#34; alt=&#34;Dockerhub&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://microbadger.com/images/itslabq/sss&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/itslabq/sss.svg&#34; alt=&#34;MicroBadger&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Server application provides a data storage service based on the threshold secret
sharing scheme.
The server application is based on &lt;a href=&#34;http://www.grpc.io/&#34;&gt;gRPC&lt;/a&gt;, and you can
find the service definition in &lt;a href=&#34;https://github.com/itslab-kyushu/sss/blob/master/kvs/kvs.proto&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.grpc.io/&#34;&gt;&lt;img src=&#34;../img/grpc.png&#34; alt=&#34;gRPC&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;The server application takes three flags,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--port&lt;/code&gt;: the port number the server will listen,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--root&lt;/code&gt;: the document root path to store uploaded shares,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-compress&lt;/code&gt;: if set, all shares will be stored without compression.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If those flags are omitted, default values are used.
Thus, you can start a server by just run &lt;code&gt;sss-server&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;docker-support&#34;&gt;Docker support&lt;/h2&gt;

&lt;p&gt;A docker image to run the server, &lt;code&gt;itslabq/sss&lt;/code&gt;, is also available.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;&lt;img src=&#34;../img/small_h-trans.png&#34; alt=&#34;docker&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Containers based on this image expose port 13009 and store uploaded shares into
&lt;code&gt;/data&lt;/code&gt;. The following command runs a container with mapping local port 13009
and &lt;code&gt;$(pwd)/data&lt;/code&gt; to the container&amp;rsquo;s port 13009 and &lt;code&gt;/data&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run -it -p 13009:13009 -v $(pwd)/data:/data itslabq/sss
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Compiled binaries of the server application &lt;code&gt;sss-server&lt;/code&gt; are available on
&lt;a href=&#34;https://github.com/itslab-kyushu/sss/releases&#34;&gt;Github&lt;/a&gt;.
To use these binaries, after downloading a binary to your environment, decompress and put it in a directory included in your $PATH.&lt;/p&gt;

&lt;p&gt;You can also compile by yourself.
First, you need to download the code base:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/itslab-kyushu/sss $GOPATH/src/itslab-kyushu/sss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, build server command &lt;code&gt;sss-server&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd $GOPATH/src/itslab-kyushu/sss/server
$ go get -d -t -v .
$ go build -o sss-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To build it, &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &amp;gt; 1.7.4 is required.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>API Reference</title>
      <link>https://itslab-kyushu.github.io/sss/api/</link>
      <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://itslab-kyushu.github.io/sss/api/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/itslab-kyushu/sss/sss&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/itslab-kyushu/sss/sss?status.svg&#34; alt=&#34;GoDoc&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package &lt;code&gt;github.com/itslab-kyushu/sss/sss&lt;/code&gt; provides Distribute and Reconstruct
functions, which execute distribute and reconstruct procedures defined in the
threshold Secret Sharing scheme.
It also provides useful structures, Field and Polynomial.&lt;/p&gt;

&lt;p&gt;This page explains a basic usage of those functions.
See &lt;a href=&#34;https://godoc.org/github.com/itslab-kyushu/sss/sss&#34;&gt;godoc&lt;/a&gt; for the detailed
information.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ go get -d github.com/itslab-kyushu/sss
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;h3 id=&#34;compute-shares-from-a-secret&#34;&gt;Compute shares from a secret&lt;/h3&gt;

&lt;p&gt;Distribute function takes secret, chunk size, the total number of shares,
and minimum number of shares to reconstruct the secret, in this order,
and returns a slice of shares.&lt;/p&gt;

&lt;p&gt;The following example reads a file, creates shares and stores them in JSON
format.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;secret, err := ioutil.ReadFile(&amp;quot;secret-file&amp;quot;)
if err != nil {
  return err
}

shares, err := sss.Distribute(secret, chunksize, totalShares, threshold)
if err != nil {
  return err
}

for i, s := range shares {
  data, err := json.Marshal(s)
  if err != nil {
    return err
  }
  filename := fmt.Sprintf(&amp;quot;%s.%d.json&amp;quot;, &amp;quot;share-&amp;quot;, i)
  if err = ioutil.WriteFile(filename, data, 0644); err != nil {
    return err
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reconstruct-the-secret&#34;&gt;Reconstruct the secret&lt;/h3&gt;

&lt;p&gt;Reconstruct takes a slice of shares and returns the secret in a slice of bytes.&lt;/p&gt;

&lt;p&gt;The following example reads a set of share files, reconstruct the secret, and
writes it to a file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// filenames is a slice of file names of shares.
shares := make([]sss.Share, len(filenames))
for i, f := range filenames {

  data, err := ioutil.ReadFile(f)
  if err != nil {
    return err
  }

  if err = json.Unmarshal(data, &amp;amp;shares[i]); err != nil {
    return err
  }

}

secret, err := sss.Reconstruct(shares)
if err != nil {
  return err
}
return ioutil.WriteFile(&amp;quot;secret-file&amp;quot;, secret, 0644)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Licenses</title>
      <link>https://itslab-kyushu.github.io/sss/licenses/</link>
      <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://itslab-kyushu.github.io/sss/licenses/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/copyleft/gpl.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv3-blue.svg&#34; alt=&#34;GPLv3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This software is released under the GPLv3.&lt;/p&gt;

&lt;p&gt;Copyright &amp;copy; 2017 Junpei Kawamoto&lt;/p&gt;

&lt;p&gt;This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.&lt;/p&gt;

&lt;p&gt;This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU General Public License
along with this program.  If not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;notices-for-libraries&#34;&gt;Notices for libraries&lt;/h2&gt;

&lt;p&gt;This software uses the following open source libraries.&lt;/p&gt;

&lt;h3 id=&#34;cli-https-github-com-urfave-cli&#34;&gt;&lt;a href=&#34;https://github.com/urfave/cli&#34;&gt;cli&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Copyright &amp;copy; 2016 Jeremy Saenz &amp;amp; Contributors&lt;/p&gt;

&lt;p&gt;Licensed under the MIT License.&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.&lt;/p&gt;

&lt;h2 id=&#34;go-support-for-protocol-buffers-https-github-com-golang-protobuf&#34;&gt;&lt;a href=&#34;https://github.com/golang/protobuf&#34;&gt;Go support for Protocol Buffers&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Copyright 2010 The Go Authors.  All rights reserved.
&lt;a href=&#34;https://github.com/golang/protobuf&#34;&gt;https://github.com/golang/protobuf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* Redistributions of source code must retain the above copyright
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following disclaimer
in the documentation and/or other materials provided with the
distribution.
    * Neither the name of Google Inc. nor the names of its
contributors may be used to endorse or promote products derived from
this software without specific prior written permission.&lt;/p&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
&amp;ldquo;AS IS&amp;rdquo; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;h2 id=&#34;grpc-go-https-github-com-grpc-grpc-go&#34;&gt;&lt;a href=&#34;https://github.com/grpc/grpc-go&#34;&gt;gRPC-Go&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Copyright 2014, Google Inc.
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* Redistributions of source code must retain the above copyright
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following disclaimer
in the documentation and/or other materials provided with the
distribution.
    * Neither the name of Google Inc. nor the names of its
contributors may be used to endorse or promote products derived from
this software without specific prior written permission.&lt;/p&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
&amp;ldquo;AS IS&amp;rdquo; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;h2 id=&#34;pb-https-github-com-cheggaaa-pb&#34;&gt;&lt;a href=&#34;https://github.com/cheggaaa/pb&#34;&gt;pb&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Copyright &amp;copy; 2012-2015, Sergey Cherepanov&lt;/p&gt;

&lt;p&gt;All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice, this
list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of the author nor the names of its contributors may be used
to endorse or promote products derived from this software without specific
prior written permission.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &amp;ldquo;AS IS&amp;rdquo; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;h2 id=&#34;package-xz-https-github-com-ulikunitz-xz&#34;&gt;&lt;a href=&#34;https://github.com/ulikunitz/xz&#34;&gt;Package xz&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Copyright &amp;copy; 2014-2016  Ulrich Kunitz
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;My name, Ulrich Kunitz, may not be used to endorse or promote products
derived from this software without specific prior written permission.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &amp;ldquo;AS IS&amp;rdquo;
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;h2 id=&#34;yaml-support-for-the-go-language-https-github-com-go-yaml-yaml&#34;&gt;&lt;a href=&#34;https://github.com/go-yaml/yaml&#34;&gt;YAML support for the Go language&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Copyright 2011-2016 Canonical Ltd.&lt;/p&gt;

&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Threshold Secret Sharing Scheme</title>
      <link>https://itslab-kyushu.github.io/sss/</link>
      <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://itslab-kyushu.github.io/sss/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/copyleft/gpl.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv3-blue.svg&#34; alt=&#34;GPLv3&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://circleci.com/gh/itslab-kyushu/sss/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/itslab-kyushu/sss/tree/master.svg?style=svg&#34; alt=&#34;CircleCI&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://app.wercker.com/project/byKey/16562999f1f803486bd8893c1dec21e6&#34;&gt;&lt;img src=&#34;https://app.wercker.com/status/16562999f1f803486bd8893c1dec21e6/s/master&#34; alt=&#34;wercker status&#34; title=&#34;wercker status&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://github.com/itslab-kyushu/sss/releases/tag/v0.3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-0.3.0-brightgreen.svg&#34; alt=&#34;Release&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;This software provides both a &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;
&lt;a href=&#34;https://godoc.org/github.com/itslab-kyushu/sss/sss&#34;&gt;library&lt;/a&gt; and
command line tools implementing the threshold Secret Sharing scheme:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adi Shamir, &amp;ldquo;&lt;a href=&#34;http://dl.acm.org/ft_gateway.cfm?id=359176&#34;&gt;How to share a secret&lt;/a&gt;,&amp;rdquo;
Communications of the ACM, 22(11):pp.612–613, 1979.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;contents&#34;&gt;Contents&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To use the threshold secret sharing from another go application,
see the &lt;a href=&#34;api&#34;&gt;API Reference&lt;/a&gt; page.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;To compute shares and reconstruct a secret in a computer,
see the &lt;a href=&#34;local&#34;&gt;local mode usage&lt;/a&gt; page.&lt;/li&gt;
&lt;li&gt;To use a secret sharing based data storage service,
see the &lt;a href=&#34;remote&#34;&gt;client usage&lt;/a&gt; and &lt;a href=&#34;server&#34;&gt;server usage&lt;/a&gt; pages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;This software is released under The GNU General Public License Version 3,
see &lt;a href=&#34;./licenses/&#34;&gt;license&lt;/a&gt; for more detail.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>